
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the username from the incoming request.
    // This assumes you are passing the username in the token's claims.
    // Since the app uses custom auth, we can't rely on auth.uid.
    // For now, let's assume a simpler, less secure model for demonstration
    // and then improve it. A real app should use Firebase Auth.
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{username} {
      // Users can read their own profile.
      allow get: if isSignedIn();
      // Users can create their own account.
      allow create: if !isSignedIn();
      // Users can only update their own profile information.
      allow update: if isSignedIn() && request.auth.token.username == username;
    }

    // Rules for the 'chats' collection
    match /chats/chat_{username} {
      // A user can read and write to their own chat document.
      // The wildcard {username} captures the username part of the document ID.
      // We check if the authenticated user's token contains a matching username.
      // This is a placeholder for a real authentication system.
      // For the current custom auth, this rule will not work as is,
      // so we will open it up for any signed-in user for now.
      // WARNING: In a production app, you would need to implement
      // proper authentication (like Firebase Auth) to secure this correctly.
      allow read, write: if true; // WARNING: Insecure rule for development
    }
  }
}
